- badge: System Knowledge
  summary: demonstrate understanding of core facts
  components:
    - two git workflows
    - manage files with bash
    - use common search (grep, awk)
    - identify when terminal is faster
    - apply small components philosophy
    - attribute features of git to vcs vs file system
    - generalize language features
  framing:
    - understand
- badge: Systems experiences
  summary: do in class activities with basic annotation
- badge: Experiments
  summary: ask questions and demonstrate the answer
  framing:
    - evaluate
    - judge/ synthesize 
- badge: (More practice)
  summary: 
  components:
    - interpret assembly code by running it
    - compare git workflows
    - map git internals
    - convert numbers
    - differentiate git components, commits, tree, blob,
    - write more complex bash scripts
    - identify more uses for CI/CD
    - file permissions through octal
    - ssh uses
    - use a server
    - identify how different code compiles 
    - overflow
    - understand how bytes work and binary
    - demonstrate edge cases with floats
    - use different sets of gates to do the same thing
    - compare adder types
    - name and describe role of compoents
    - identify systems library uses
    - uses of multithreading
    - uses ofr hpc
    - IDE comparison
    - language comparison
  framing:
    - apply
    - compare and contrast 
    - brainstorm
    - identify use of common abstractions in systems use